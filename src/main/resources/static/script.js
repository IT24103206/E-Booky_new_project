document.addEventListener('DOMContentLoaded', function() {
    const API_BASE_URL = 'http://localhost:8080'; // Spring Boot default port
    const feedbackForm = document.getElementById('feedbackForm');
    const viewAllBtn = document.getElementById('viewAllBtn');
    const viewByUserBtn = document.getElementById('viewByUserBtn');
    const viewByBookBtn = document.getElementById('viewByBookBtn');
    const userInput = document.getElementById('userInput');
    const bookInput = document.getElementById('bookInput');
    const submitUserId = document.getElementById('submitUserId');
    const submitBookId = document.getElementById('submitBookId');
    const feedbackResults = document.getElementById('feedbackResults');



    // Event listeners for view buttons
    viewAllBtn.addEventListener('click', function() {
        userInput.style.display = 'none';
        bookInput.style.display = 'none';
        fetchAllFeedback();
        fetch(`${API_BASE_URL}/feedback`) // Wrong
        fetch(API_BASE_URL + '/feedback') // Correct
    });

    viewByUserBtn.addEventListener('click', function() {
        userInput.style.display = 'block';
        bookInput.style.display = 'none';
    });

    viewByBookBtn.addEventListener('click', function() {
        userInput.style.display = 'none';
        bookInput.style.display = 'block';
    });

    // Event listeners for submit buttons
    submitUserId.addEventListener('click', function() {
        const userId = document.getElementById('userIdInput').value;
        if (userId) {
            fetchFeedbackByUser(userId);
        } else {
            showAlert('Please enter a valid User ID', 'danger');
        }
    });

    submitBookId.addEventListener('click', function() {
        const bookId = document.getElementById('bookIdInput').value;
        if (bookId) {
            fetchFeedbackByBook(bookId);
        } else {
            showAlert('Please enter a valid Book ID', 'danger');
        }
    });

    // Form submission for new feedback
    feedbackForm.addEventListener('submit', function(e) {
        e.preventDefault();

        const userId = document.getElementById('userId').value;
        const bookId = document.getElementById('bookId').value;
        const rating = document.getElementById('rating').value;
        const message = document.getElementById('message').value;

        const feedbackData = {
            feedbackId: 0, // Will be generated by backend
            feedbackUser: {
                userId: parseInt(userId)
            },
            rating: parseInt(rating),
            book: {
                bookId: parseInt(bookId)
            },
            message: message
        };

        submitFeedback(feedbackData);
    });

    // Fetch all feedback
    function fetchAllFeedback() {
        fetch(`${API_BASE_URL}/feedback`)
            .then(response => response.json())
            .then(data => displayFeedback(data))
            .catch(error => {
                console.error('Error fetching feedback:', error);
                showAlert('Failed to fetch feedback', 'danger');
            });
    }

    // Fetch feedback by user
    function fetchFeedbackByUser(userId) {
        fetch(`${API_BASE_URL}/feedback/user/${userId}`)
            .then(response => response.json())
            .then(data => displayFeedback(data))
            .catch(error => {
                console.error('Error fetching user feedback:', error);
                showAlert('Failed to fetch user feedback', 'danger');
            });
    }

    // Fetch feedback by book
    function fetchFeedbackByBook(bookId) {
        fetch(`${API_BASE_URL}/feedback/book/${bookId}`)
            .then(response => response.json())
            .then(data => displayFeedback(data))
            .catch(error => {
                console.error('Error fetching book feedback:', error);
                showAlert('Failed to fetch book feedback', 'danger');
            });
    }

    // Submit new feedback
    function submitFeedback(feedbackData) {
        fetch(`${API_BASE_URL}/feedback`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(feedbackData)
        })
            .then(response => response.json())
            .then(data => {
                showAlert('Feedback submitted successfully!', 'success');
                feedbackForm.reset();
                fetchAllFeedback(); // Refresh the feedback list
            })
            .catch(error => {
                console.error('Error submitting feedback:', error);
                showAlert('Failed to submit feedback', 'danger');
            });
    }

    // Display feedback in the results div
    function displayFeedback(feedbacks) {
        if (feedbacks.length === 0) {
            feedbackResults.innerHTML = '<div class="alert alert-info">No feedback found</div>';
            return;
        }

        let html = '<div class="feedback-list">';
        feedbacks.forEach(feedback => {
            html += `
                <div class="feedback-item">
                    <div class="rating">Rating: ${feedback.rating}/5</div>
                    <div class="message">${feedback.message}</div>
                    <div class="user">User ID: ${feedback.feedbackUser.userId}</div>
                    <div class="book">Book ID: ${feedback.book.bookId}</div>
                </div>
            `;
        });
        html += '</div>';

        feedbackResults.innerHTML = html;
    }

    // Show alert message
    function showAlert(message, type) {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} mt-3`;
        alertDiv.textContent = message;

        feedbackResults.prepend(alertDiv);

        // Remove alert after 3 seconds
        setTimeout(() => {
            alertDiv.remove();
        }, 3000);
    }

    // Initial load - fetch all feedback
    fetchAllFeedback();
});